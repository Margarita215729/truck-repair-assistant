(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[161],{6031:(e,t,n)=>{Promise.resolve().then(n.bind(n,9113))},9113:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>u});var s=n(5155),a=n(2115),i=n(9882);class r{async diagnoseTruckIssue(e){let t="TRUCK INFORMATION:\nMake: ".concat(e.truck.make,"\nModel: ").concat(e.truck.model,"\nYear: ").concat(e.truck.year||(e.truck.years?e.truck.years[e.truck.years.length-1]:"Unknown"),"\nEngine: ").concat(e.truck.engine,"\n\nREPORTED SYMPTOMS:\n").concat(e.symptoms.map((e,t)=>"".concat(t+1,". ").concat(e)).join("\n"),"\n\n").concat(e.additionalInfo?"ADDITIONAL INFORMATION:\n".concat(e.additionalInfo,"\n"):"","\n\nURGENCY LEVEL: ").concat(e.urgency||"medium","\n\nPlease provide a comprehensive diagnosis including:\n1. Most likely diagnosis with confidence level (1-10)\n2. Step-by-step repair instructions\n3. Required tools and parts\n4. Estimated repair time\n5. Estimated cost range\n6. Critical safety warnings\n7. Urgency assessment");try{var n,s;let a=null==(s=(await this.client.chat.completions.create({model:this.config.deploymentName,messages:[{role:"system",content:'You are an expert truck mechanic with over 20 years of experience specializing in commercial vehicle diagnostics and repair. You have extensive knowledge of:\n\n- Heavy-duty diesel engines (Caterpillar, Cummins, Detroit Diesel, PACCAR, Volvo, Mack)\n- Emissions systems (DPF, SCR, EGR, DEF)\n- Transmission systems (manual, automatic, AMT)\n- Air brake systems and pneumatics\n- Electrical and electronic systems\n- Preventive maintenance schedules\n\nProvide accurate, practical repair guidance with safety considerations. Always include cost estimates and time requirements.\n\nRespond ONLY with valid JSON in this exact format:\n{\n  "diagnosis": "string - detailed diagnosis",\n  "confidence": number (1-10),\n  "repairSteps": ["step 1", "step 2", "step 3"],\n  "requiredTools": ["tool 1", "tool 2"],\n  "estimatedTime": "string - time estimate",\n  "estimatedCost": "string - cost range",\n  "safetyWarnings": ["warning 1", "warning 2"],\n  "urgencyLevel": "low | medium | high"\n}'},{role:"user",content:t}],max_tokens:4e3,temperature:.3,response_format:{type:"json_object"}})).choices[0])||null==(n=s.message)?void 0:n.content;if(!a)throw Error("No response content received");try{return JSON.parse(a)}catch(t){return{diagnosis:a,confidence:7,repairSteps:["Contact a qualified mechanic for detailed diagnosis"],requiredTools:["Professional diagnostic tools"],estimatedTime:"1-3 hours",estimatedCost:"$200-800",safetyWarnings:["Always follow proper safety procedures"],urgencyLevel:e.urgency||"medium"}}}catch(e){throw console.error("Error calling Azure OpenAI API:",e),Error("Failed to get AI diagnosis. Please try again.")}}async chatWithAssistant(e){try{var t,n;return(null==(n=(await this.client.chat.completions.create({model:this.config.deploymentName,messages:[{role:"system",content:"You are a professional truck repair assistant with expertise in heavy-duty vehicle maintenance and diagnostics. \n    Provide helpful, accurate, and safety-focused advice. Always recommend professional inspection for critical issues."},...e],max_tokens:2e3,temperature:.1,stream:!1})).choices[0])||null==(t=n.message)?void 0:t.content)||"Sorry, I could not process your request."}catch(e){return console.error("Error in chat:",e),"I apologize, but I'm having trouble connecting to the AI service. Please try again later or consult with a professional mechanic."}}async streamChatResponse(e){try{let t=await this.client.chat.completions.create({model:this.config.deploymentName,messages:[{role:"system",content:"You are a professional truck repair assistant with expertise in heavy-duty vehicle maintenance and diagnostics. \n    Provide helpful, accurate, and safety-focused advice. Always recommend professional inspection for critical issues."},...e],max_tokens:2e3,temperature:.1,stream:!0});return this.processStream(t)}catch(e){throw console.error("Error in streaming chat:",e),e}}async *processStream(e){for await(let a of e){var t,n,s;let e=null==(s=a.choices)||null==(n=s[0])||null==(t=n.delta)?void 0:t.content;e&&(yield e)}}async analyzeEngineSound(e,t){var n,s;let a=await this.describeAudioIssue(e),i="Based on this audio description from a ".concat(t.make," ").concat(t.model,' truck engine: "').concat(a,'"\n    \n    Please analyze what mechanical issues this might indicate and provide diagnostic guidance.');return(null==(s=(await this.client.chat.completions.create({model:this.config.deploymentName,messages:[{role:"system",content:"You are an expert truck mechanic specializing in engine diagnostics through sound analysis."},{role:"user",content:i}],max_tokens:1e3,temperature:.2})).choices[0])||null==(n=s.message)?void 0:n.content)||"Unable to analyze audio at this time."}async describeAudioIssue(e){return"Engine sound with unusual noise patterns detected"}async healthCheck(){try{return await this.client.chat.completions.create({model:this.config.deploymentName,messages:[{role:"user",content:"Health check"}],max_tokens:10}),!0}catch(e){return console.error("Azure OpenAI health check failed:",e),!1}}constructor(){this.config={endpoint:"https://makee-mbmcw6g5-swedencentral.cognitiveservices.azure.com/",apiKey:"Bq5WNG1dChvrUogsFB3c0xp2aSmJNph6Vpj2e1evgSkTdri4fTQQJQQJ99BFACfhMk5XJ3w3AAAAACOGiIZj",apiVersion:"2024-12-01-preview",deploymentName:"gpt-4o"},this.client=new i.AC({apiVersion:this.config.apiVersion,endpoint:this.config.endpoint,apiKey:this.config.apiKey})}}new r;class o{async diagnoseTruckIssue(e){let t=[];if("azure-openai"===this.config.primaryProvider)try{console.log("\uD83D\uDD0D Attempting diagnosis with Azure OpenAI (primary)...");let t=await this.withTimeout(this.azureService.diagnoseTruckIssue(e),this.config.timeout);return console.log("✅ Azure OpenAI diagnosis successful"),{result:t,provider:"azure-openai",fallbackUsed:!1}}catch(n){let e={provider:"azure-openai",error:n instanceof Error?n:Error(String(n)),context:"Primary diagnosis attempt"};t.push(e),console.warn("⚠️ Azure OpenAI failed:",e.error.message)}if(this.config.fallbackEnabled)try{console.log("\uD83D\uDD04 Falling back to GitHub Models...");let n=await this.withTimeout(this.diagnoseWithGitHubModels(e),this.config.timeout);return console.log("✅ GitHub Models diagnosis successful (fallback)"),{result:n,provider:"github-models",fallbackUsed:!0,errors:t}}catch(n){let e={provider:"github-models",error:n instanceof Error?n:Error(String(n)),context:"Fallback diagnosis attempt"};t.push(e),console.error("❌ GitHub Models also failed:",e.error.message)}throw Error("All AI providers failed: ".concat(t.map(e=>"".concat(e.provider,": ").concat(e.error.message)).join(", ")))}async chat(e){let t=[];try{console.log("\uD83D\uDCAC Attempting chat with Azure OpenAI...");let t=await this.withTimeout(this.azureService.chatWithAssistant(e),this.config.timeout);return console.log("✅ Azure OpenAI chat successful"),{result:t,provider:"azure-openai",fallbackUsed:!1}}catch(n){let e={provider:"azure-openai",error:n instanceof Error?n:Error(String(n)),context:"Chat attempt"};t.push(e),console.warn("⚠️ Azure OpenAI chat failed:",e.error.message)}if(this.config.fallbackEnabled)try{console.log("\uD83D\uDD04 Falling back to GitHub Models for chat...");let n=await this.withTimeout(this.chatWithGitHubModels(e),this.config.timeout);return console.log("✅ GitHub Models chat successful (fallback)"),{result:n,provider:"github-models",fallbackUsed:!0,errors:t}}catch(n){let e={provider:"github-models",error:n instanceof Error?n:Error(String(n)),context:"Fallback chat attempt"};t.push(e),console.error("❌ GitHub Models chat also failed:",e.error.message)}throw Error("All chat providers failed: ".concat(t.map(e=>"".concat(e.provider,": ").concat(e.error.message)).join(", ")))}async streamChat(e,t){try{for await(let n of(console.log("\uD83C\uDF0A Attempting streaming chat with Azure OpenAI..."),await this.azureService.streamChatResponse(e)))t(n);console.log("✅ Azure OpenAI streaming successful")}catch(n){if(console.warn("⚠️ Azure OpenAI streaming failed, falling back to regular chat:",n),this.config.fallbackEnabled)try{let n=await this.chatWithGitHubModels(e);t(n),console.log("✅ Fallback to GitHub Models successful")}catch(e){throw console.error("❌ Both streaming and fallback failed:",e),Error("Streaming failed: ".concat(n,". Fallback also failed: ").concat(e))}else throw n}}async checkHealth(){let e=[];try{let t=Date.now(),n=await this.azureService.healthCheck(),s=Date.now()-t;e.push({isHealthy:n,service:"azure-openai",latency:s})}catch(t){e.push({isHealthy:!1,service:"azure-openai",error:t instanceof Error?t.message:"Unknown error"})}try{let t=Date.now();await this.testGitHubModelsConnection();let n=Date.now()-t;e.push({isHealthy:!0,service:"github-models",latency:n})}catch(t){e.push({isHealthy:!1,service:"github-models",error:t instanceof Error?t.message:"Unknown error"})}return e}async withTimeout(e,t){return Promise.race([e,new Promise((e,n)=>{setTimeout(()=>n(Error("Operation timed out after ".concat(t,"ms"))),t)})])}async diagnoseWithGitHubModels(e){var t,n;let s="TRUCK INFORMATION:\nMake: ".concat(e.truck.make,"\nModel: ").concat(e.truck.model,"\nYear: ").concat(e.truck.year||(e.truck.years?e.truck.years[e.truck.years.length-1]:"Unknown"),"\nEngine: ").concat(e.truck.engine,"\n\nREPORTED SYMPTOMS:\n").concat(e.symptoms.map((e,t)=>"".concat(t+1,". ").concat(e)).join("\n"),"\n\n").concat(e.additionalInfo?"ADDITIONAL INFORMATION:\n".concat(e.additionalInfo,"\n"):"","\n\nURGENCY LEVEL: ").concat(e.urgency||"medium","\n\nPlease provide a comprehensive diagnosis including:\n1. Most likely diagnosis with confidence level (1-10)\n2. Step-by-step repair instructions\n3. Required tools and equipment\n4. Estimated time and cost\n5. Important safety warnings\n6. Urgency assessment"),a=await fetch("".concat(this.githubEndpoint,"/chat/completions"),{method:"POST",headers:{Authorization:"Bearer ".concat(this.githubToken),"Content-Type":"application/json"},body:JSON.stringify({messages:[{role:"system",content:'You are an expert truck mechanic with over 20 years of experience specializing in commercial vehicle diagnostics and repair. You have extensive knowledge of:\n\n- Heavy-duty diesel engines (Caterpillar, Cummins, Detroit Diesel, PACCAR, Volvo, Mack)\n- Emissions systems (DPF, SCR, EGR, DEF)\n- Transmission systems (manual, automatic, AMT)\n- Air brake systems and pneumatics\n- Electrical and electronic systems\n- Preventive maintenance schedules\n\nProvide accurate, practical repair guidance with safety considerations. Always include cost estimates and time requirements.\n\nRespond ONLY with valid JSON in this exact format:\n{\n  "diagnosis": "string - detailed diagnosis",\n  "confidence": number (1-10),\n  "repairSteps": ["step 1", "step 2", "step 3"],\n  "requiredTools": ["tool 1", "tool 2"],\n  "estimatedTime": "string - time estimate",\n  "estimatedCost": "string - cost range",\n  "safetyWarnings": ["warning 1", "warning 2"],\n  "urgencyLevel": "low | medium | high"\n}'},{role:"user",content:s}],model:"gpt-4o",temperature:.1,max_tokens:2e3})});if(!a.ok)throw Error("GitHub Models API error: ".concat(a.status," ").concat(a.statusText));let i=null==(n=(await a.json()).choices[0])||null==(t=n.message)?void 0:t.content;if(!i)throw Error("No response content from GitHub Models");try{return JSON.parse(i)}catch(e){throw console.error("Failed to parse GitHub Models response:",i),Error("Invalid JSON response from GitHub Models")}}async chatWithGitHubModels(e){var t,n;let s=await fetch("".concat(this.githubEndpoint,"/chat/completions"),{method:"POST",headers:{Authorization:"Bearer ".concat(this.githubToken),"Content-Type":"application/json"},body:JSON.stringify({messages:e,model:"gpt-4o",temperature:.7,max_tokens:1500})});if(!s.ok)throw Error("GitHub Models API error: ".concat(s.status," ").concat(s.statusText));return(null==(n=(await s.json()).choices[0])||null==(t=n.message)?void 0:t.content)||""}async testGitHubModelsConnection(){let e=await fetch("".concat(this.githubEndpoint,"/chat/completions"),{method:"POST",headers:{Authorization:"Bearer ".concat(this.githubToken),"Content-Type":"application/json"},body:JSON.stringify({messages:[{role:"user",content:"Test connection"}],model:"gpt-4o",max_tokens:10})});if(!e.ok)throw Error("GitHub Models connection test failed: ".concat(e.status))}async generateResponse(e){return(await this.chat(e)).result}async analyzeAudio(e,t){let n={truck:t,symptoms:["Audio analysis: "+e.substring(0,100)],additionalInfo:"Audio diagnostic data provided",urgency:"medium"};return(await this.diagnoseTruckIssue(n)).result}setPrimaryProvider(e){this.config.primaryProvider=e}setFallbackEnabled(e){this.config.fallbackEnabled=e}setTimeout(e){this.config.timeout=e}getConfig(){return{...this.config}}constructor(e){this.azureService=new r,this.githubToken="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",this.githubEndpoint="https://models.inference.ai.azure.com",this.config={primaryProvider:"azure-openai",fallbackEnabled:!0,timeout:3e4,...e}}}let c=new o;class l{async diagnoseTruckIssue(e){try{console.log("Attempting diagnosis with Azure OpenAI...");let t=await this.azureService.diagnoseTruckIssue(e);return console.log("Azure OpenAI diagnosis successful"),t}catch(t){console.warn("Azure OpenAI failed, falling back to GitHub Models:",t);try{return await this.diagnoseWithGitHubModels(e)}catch(e){throw console.error("Both Azure OpenAI and GitHub Models failed:",{azureError:t,githubError:e}),Error("AI diagnosis failed: Azure OpenAI (".concat(t,") and GitHub Models (").concat(e,")"))}}}async chat(e){try{console.log("Attempting chat with Azure OpenAI...");let t=await this.azureService.chatWithAssistant(e);return console.log("Azure OpenAI chat successful"),t}catch(t){console.warn("Azure OpenAI chat failed, falling back to GitHub Models:",t);try{return await this.chatWithGitHubModels(e)}catch(e){throw console.error("Both Azure OpenAI and GitHub Models chat failed:",{azureError:t,githubError:e}),Error("AI chat failed: Azure OpenAI (".concat(t,") and GitHub Models (").concat(e,")"))}}}async streamChat(e,t){try{for await(let n of(console.log("Attempting streaming chat with Azure OpenAI..."),await this.azureService.streamChatResponse(e)))t(n);console.log("Azure OpenAI streaming chat successful");return}catch(n){console.warn("Azure OpenAI streaming failed, falling back to GitHub Models:",n);try{let n=await this.chatWithGitHubModels(e);t(n)}catch(e){throw console.error("Both Azure OpenAI and GitHub Models streaming failed:",{azureError:n,githubError:e}),Error("AI streaming failed: Azure OpenAI (".concat(n,") and GitHub Models (").concat(e,")"))}}}async checkHealth(){try{if(await this.azureService.healthCheck())return{isHealthy:!0,service:"azure-openai",latency:0}}catch(e){console.warn("Azure OpenAI health check failed:",e)}try{let e=Date.now();await this.testGitHubModelsConnection();let t=Date.now()-e;return{isHealthy:!0,service:"github-models",latency:t}}catch(e){return{isHealthy:!1,service:"github-models",error:e instanceof Error?e.message:"Unknown error"}}}async diagnoseWithGitHubModels(e){var t,n;let s="TRUCK INFORMATION:\nMake: ".concat(e.truck.make,"\nModel: ").concat(e.truck.model,"\nYear: ").concat(e.truck.year||(e.truck.years?e.truck.years[e.truck.years.length-1]:"Unknown"),"\nEngine: ").concat(e.truck.engine,"\n\nREPORTED SYMPTOMS:\n").concat(e.symptoms.map((e,t)=>"".concat(t+1,". ").concat(e)).join("\n"),"\n\n").concat(e.additionalInfo?"ADDITIONAL INFORMATION:\n".concat(e.additionalInfo,"\n"):"","\n\nURGENCY LEVEL: ").concat(e.urgency||"medium","\n\nPlease provide a comprehensive diagnosis including:\n1. Most likely diagnosis with confidence level (1-10)\n2. Step-by-step repair instructions\n3. Required tools and equipment\n4. Estimated time and cost\n5. Important safety warnings\n6. Urgency assessment"),a=await fetch("".concat(this.githubEndpoint,"/chat/completions"),{method:"POST",headers:{Authorization:"Bearer ".concat(this.githubToken),"Content-Type":"application/json"},body:JSON.stringify({messages:[{role:"system",content:'You are an expert truck mechanic with over 20 years of experience specializing in commercial vehicle diagnostics and repair. You have extensive knowledge of:\n\n- Heavy-duty diesel engines (Caterpillar, Cummins, Detroit Diesel, PACCAR, Volvo, Mack)\n- Emissions systems (DPF, SCR, EGR, DEF)\n- Transmission systems (manual, automatic, AMT)\n- Air brake systems and pneumatics\n- Electrical and electronic systems\n- Preventive maintenance schedules\n\nProvide accurate, practical repair guidance with safety considerations. Always include cost estimates and time requirements.\n\nRespond ONLY with valid JSON in this exact format:\n{\n  "diagnosis": "string - detailed diagnosis",\n  "confidence": number (1-10),\n  "repairSteps": ["step 1", "step 2", "step 3"],\n  "requiredTools": ["tool 1", "tool 2"],\n  "estimatedTime": "string - time estimate",\n  "estimatedCost": "string - cost range",\n  "safetyWarnings": ["warning 1", "warning 2"],\n  "urgencyLevel": "low | medium | high"\n}'},{role:"user",content:s}],model:"gpt-4o",temperature:.1,max_tokens:2e3})});if(!a.ok)throw Error("GitHub Models API error: ".concat(a.status," ").concat(a.statusText));let i=null==(n=(await a.json()).choices[0])||null==(t=n.message)?void 0:t.content;if(!i)throw Error("No response content from GitHub Models");try{return JSON.parse(i)}catch(e){throw console.error("Failed to parse GitHub Models response:",i),Error("Invalid JSON response from GitHub Models")}}async chatWithGitHubModels(e){var t,n;let s=await fetch("".concat(this.githubEndpoint,"/chat/completions"),{method:"POST",headers:{Authorization:"Bearer ".concat(this.githubToken),"Content-Type":"application/json"},body:JSON.stringify({messages:e,model:"gpt-4o",temperature:.7,max_tokens:1500})});if(!s.ok)throw Error("GitHub Models API error: ".concat(s.status," ").concat(s.statusText));return(null==(n=(await s.json()).choices[0])||null==(t=n.message)?void 0:t.content)||""}async testGitHubModelsConnection(){let e=await fetch("".concat(this.githubEndpoint,"/chat/completions"),{method:"POST",headers:{Authorization:"Bearer ".concat(this.githubToken),"Content-Type":"application/json"},body:JSON.stringify({messages:[{role:"user",content:"Test connection"}],model:"gpt-4o",max_tokens:10})});if(!e.ok)throw Error("GitHub Models connection test failed: ".concat(e.status))}async generateResponse(e){return this.chat(e)}async analyzeAudio(e,t){let n={truck:t,symptoms:["Audio analysis: "+e.substring(0,100)],additionalInfo:"Audio diagnostic data provided",urgency:"medium"};return this.diagnoseTruckIssue(n)}constructor(){this.azureService=new r,this.githubToken="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",this.githubEndpoint="https://models.inference.ai.azure.com"}}let d=new l,u=()=>{let[e,t]=(0,a.useState)({}),[n,i]=(0,a.useState)(null),[r,o]=(0,a.useState)([]),[l,u]=(0,a.useState)(""),h={id:"test-truck",make:"Peterbilt",model:"379",year:2020,engine:"Caterpillar C15"};(0,a.useEffect)(()=>{g()},[]);let m=async(e,n)=>{i(e);let s=Date.now();try{let a=await n(),i=Date.now()-s;t(t=>({...t,[e]:{success:!0,duration:i,provider:a.provider,fallbackUsed:a.fallbackUsed,data:a.result||a}}))}catch(a){let n=Date.now()-s;t(t=>({...t,[e]:{success:!1,duration:n,error:a instanceof Error?a.message:"Unknown error"}}))}finally{i(null)}},g=async()=>{await m("health-check",async()=>{let e=await c.checkHealth();return o(e),e})},p=async()=>{let e={truck:h,symptoms:["Engine making unusual noise","Reduced power","Black smoke from exhaust"],additionalInfo:"Truck has been driven for 500,000 miles. Last maintenance was 3 months ago.",urgency:"medium"};await m("enhanced-diagnosis",async()=>await c.diagnoseTruckIssue(e))},y=async()=>{let e={truck:h,symptoms:["Engine overheating","Coolant leak","Temperature gauge in red zone"],additionalInfo:"Truck stopped on highway due to overheating warning.",urgency:"high"};await m("legacy-diagnosis",async()=>await d.diagnoseTruckIssue(e))},f=async()=>{let e=[{role:"user",content:"What are the most common issues with Caterpillar C15 engines?"}];await m("enhanced-chat",async()=>await c.chat(e))},b=async()=>{u("");let e=[{role:"user",content:"Explain the process of diagnosing a diesel engine that has black smoke coming from the exhaust."}];await m("streaming-chat",async()=>new Promise((t,n)=>{let s="";c.streamChat(e,e=>{u(s+=e)}).then(()=>{t(s)}).catch(n)}))},w=async()=>{await m("config-changes",async()=>{let e=c.getConfig();c.setPrimaryProvider("github-models");let t=c.getConfig();return c.setPrimaryProvider(e.primaryProvider),{originalConfig:e,configAfterChange:t,restored:!0}})},v=async()=>{await m("timeout-test",async()=>{let e=c.getConfig().timeout;c.setTimeout(1);try{return await c.diagnoseTruckIssue({truck:h,symptoms:["Test timeout"],urgency:"low"}),{timeoutTriggered:!1}}catch(e){return{timeoutTriggered:!0,error:e instanceof Error?e.message:"Unknown error"}}finally{c.setTimeout(e)}})},k=(e,t)=>t?(0,s.jsxs)("div",{className:"p-4 rounded-lg border ".concat(t.success?"bg-green-50 border-green-200":"bg-red-50 border-red-200"),children:[(0,s.jsxs)("div",{className:"flex justify-between items-start mb-2",children:[(0,s.jsx)("h4",{className:"font-semibold",children:e}),(0,s.jsx)("span",{className:"px-2 py-1 rounded text-sm ".concat(t.success?"bg-green-100 text-green-800":"bg-red-100 text-red-800"),children:t.success?"PASS":"FAIL"})]}),(0,s.jsxs)("div",{className:"text-sm text-gray-600 space-y-1",children:[(0,s.jsxs)("div",{children:["Duration: ",t.duration,"ms"]}),t.provider&&(0,s.jsxs)("div",{children:["Provider: ",t.provider]}),void 0!==t.fallbackUsed&&(0,s.jsxs)("div",{children:["Fallback used: ",t.fallbackUsed?"Yes":"No"]}),t.error&&(0,s.jsxs)("div",{className:"text-red-600 bg-red-50 p-2 rounded",children:["Error: ",t.error]})]})]}):null;return(0,s.jsx)("div",{className:"min-h-screen bg-gray-50 py-8",children:(0,s.jsxs)("div",{className:"max-w-6xl mx-auto px-4",children:[(0,s.jsx)("h1",{className:"text-4xl font-bold text-gray-900 mb-8",children:"\uD83D\uDD27 Comprehensive AI Integration Test Suite"}),(0,s.jsxs)("div",{className:"bg-white p-6 rounded-lg shadow-md mb-6",children:[(0,s.jsxs)("h2",{className:"text-2xl font-semibold mb-4 flex items-center",children:["\uD83C\uDFE5 Health Status",(0,s.jsx)("button",{onClick:g,disabled:"health-check"===n,className:"ml-4 px-3 py-1 text-sm bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50",children:"health-check"===n?"Checking...":"Refresh"})]}),(0,s.jsx)("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:r.map(e=>(0,s.jsxs)("div",{className:"p-4 rounded-lg border ".concat(e.isHealthy?"bg-green-50 border-green-200":"bg-red-50 border-red-200"),children:[(0,s.jsx)("h3",{className:"font-semibold capitalize",children:e.service.replace("-"," ")}),(0,s.jsxs)("div",{className:"text-sm text-gray-600",children:[(0,s.jsxs)("div",{children:["Status: ",e.isHealthy?"✅ Healthy":"❌ Unhealthy"]}),e.latency&&(0,s.jsxs)("div",{children:["Latency: ",e.latency,"ms"]}),e.error&&(0,s.jsxs)("div",{className:"text-red-600",children:["Error: ",e.error]})]})]},e.service))})]}),(0,s.jsxs)("div",{className:"bg-white p-6 rounded-lg shadow-md mb-6",children:[(0,s.jsx)("h2",{className:"text-2xl font-semibold mb-4",children:"\uD83E\uDDEA Test Controls"}),(0,s.jsxs)("div",{className:"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4",children:[(0,s.jsx)("button",{onClick:p,disabled:"enhanced-diagnosis"===n,className:"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50",children:"enhanced-diagnosis"===n?"Testing...":"Enhanced Diagnosis"}),(0,s.jsx)("button",{onClick:y,disabled:"legacy-diagnosis"===n,className:"bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 disabled:opacity-50",children:"legacy-diagnosis"===n?"Testing...":"Legacy Diagnosis"}),(0,s.jsx)("button",{onClick:f,disabled:"enhanced-chat"===n,className:"bg-purple-600 text-white px-4 py-2 rounded-md hover:bg-purple-700 disabled:opacity-50",children:"enhanced-chat"===n?"Testing...":"Enhanced Chat"}),(0,s.jsx)("button",{onClick:b,disabled:"streaming-chat"===n,className:"bg-orange-600 text-white px-4 py-2 rounded-md hover:bg-orange-700 disabled:opacity-50",children:"streaming-chat"===n?"Streaming...":"Streaming Chat"}),(0,s.jsx)("button",{onClick:w,disabled:"config-changes"===n,className:"bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 disabled:opacity-50",children:"config-changes"===n?"Testing...":"Config Changes"}),(0,s.jsx)("button",{onClick:v,disabled:"timeout-test"===n,className:"bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 disabled:opacity-50",children:"timeout-test"===n?"Testing...":"Timeout Test"})]})]}),l&&(0,s.jsxs)("div",{className:"bg-white p-6 rounded-lg shadow-md mb-6",children:[(0,s.jsx)("h2",{className:"text-2xl font-semibold mb-4",children:"\uD83C\uDF0A Streaming Output"}),(0,s.jsx)("div",{className:"bg-gray-100 p-4 rounded-lg",children:(0,s.jsx)("pre",{className:"whitespace-pre-wrap text-sm",children:l})})]}),(0,s.jsxs)("div",{className:"bg-white p-6 rounded-lg shadow-md",children:[(0,s.jsx)("h2",{className:"text-2xl font-semibold mb-4",children:"\uD83D\uDCCA Test Results"}),(0,s.jsx)("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:Object.entries(e).map(e=>{let[t,n]=e;return(0,s.jsx)("div",{children:k(t,n)},t)})})]}),(0,s.jsxs)("div",{className:"bg-white p-6 rounded-lg shadow-md mt-6",children:[(0,s.jsx)("h2",{className:"text-2xl font-semibold mb-4",children:"⚙️ Current Configuration"}),(0,s.jsx)("div",{className:"bg-gray-100 p-4 rounded-lg",children:(0,s.jsx)("pre",{className:"text-sm",children:JSON.stringify(c.getConfig(),null,2)})})]})]})})}}},e=>{var t=t=>e(e.s=t);e.O(0,[882,441,684,358],()=>t(6031)),_N_E=e.O()}]);